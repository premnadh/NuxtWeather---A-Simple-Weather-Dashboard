/* Nuxt 3 Weather App Project Skeleton */

// --- nuxt.config.ts ---
export default defineNuxtConfig({
  modules: ['@nuxtjs/tailwindcss'],
  runtimeConfig: {
    public: {
      apiKey: process.env.API_KEY
    }
  }
})

// --- .env ---
API_KEY=your_openweather_api_key(Add api key here)

// --- tailwind.config.ts ---
module.exports = {
  content: [
    './components/**/*.{js,vue,ts}',
    './layouts/**/*.{js,vue,ts}',
    './pages/**/*.{js,vue,ts}',
    './plugins/**/*.{js,ts}',
    './nuxt.config.{js,ts}'
  ],
  theme: {
    extend: {},
  },
  plugins: [],
}

// --- pages/index.vue ---
<template>
  <div class="min-h-screen bg-blue-100 p-6">
    <div class="max-w-md mx-auto bg-white rounded-xl shadow-md p-6 space-y-4">
      <input
        v-model="city"
        type="text"
        placeholder="Enter city"
        class="w-full p-2 border rounded"
      />
      <button @click="fetchWeather" class="bg-blue-500 text-white px-4 py-2 rounded">Get Weather</button>

      <div v-if="loading">Loading...</div>
      <div v-if="error" class="text-red-500">Error: {{ error }}</div>
      <WeatherCard v-if="weather" :weather="weather" />
    </div>
  </div>
</template>

<script setup>
import { ref } from 'vue'
import WeatherCard from '~/components/WeatherCard.vue'
const city = ref('')
const weather = ref(null)
const error = ref('')
const loading = ref(false)

const fetchWeather = async () => {
  loading.value = true
  error.value = ''
  try {
    const { data } = await useFetch(
      `https://api.openweathermap.org/data/2.5/weather?q=${city.value}&appid=${useRuntimeConfig().public.apiKey}&units=metric`
    )
    weather.value = data.value
  } catch (err) {
    error.value = 'City not found or network issue.'
  } finally {
    loading.value = false
  }
}
</script>

// --- components/WeatherCard.vue ---
<template>
  <div class="text-center">
    <h2 class="text-xl font-bold">{{ weather.name }}</h2>
    <p class="text-4xl">{{ weather.main.temp }}Â°C</p>
    <p>{{ weather.weather[0].description }}</p>
    <p>Humidity: {{ weather.main.humidity }}%</p>
  </div>
</template>

<script setup>
defineProps(['weather'])
</script>
